spring.application.name=testApp

spring.datasource.url=jdbc:postgresql://localhost:5432/MyDataBase?createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update  
spring.jpa.show-sql=true  
spring.jpa.properties.hibernate.format_sql=true  

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

security.key = ${SECRET_KEY}
#logging.level.org.hibernate=DEBUG
#logging.level.org.springframework=DEBUG

#server.port=9000

#logging.level.org.springframework.security=trace

#spring.security.user.name=user
#spring.security.user.password=password

#spring.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
#spring.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
#spring.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080/
#spring.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
#spring.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true
